    @page "/UserInfo"
    @inherits AuthenticatedPage
    @attribute [Authorize]
    @rendermode InteractiveServer

    @using SistemaDeBilheteira.Components.Cards
    @using Microsoft.AspNetCore.Authorization
    @using SistemaDeBilheteira.Services.AuthenticationService.Models
    @using SistemaDeBilheteira.Services.Database.Builders
    @using SistemaDeBilheteira.Services.Database.Entities.PaymentSystem
    @using SistemaDeBilheteira.Services.IService
    @using SistemaDeBilheteira.Services.IService.ServiceManager
    @using SistemaDeBilheteira.Services.UI


    @inject IServiceManager ServiceManager
    @inject CardBuilder CardBuilder
    @inject NotificationService NotificationService

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
    <PageTitle>User Info</PageTitle>

    <div class="background">
        <div class="products">
            <h3 class="Title">User Info</h3>
            <p class="subtitle">Modify your Email</p>
            <EditForm OnValidSubmit="UpdateEmail" Model="User" FormName="user-Email">
                <InputText @bind-Value="User!.Email" />
                <button type="submit">Update Email</button>
            </EditForm>

            <p class="subtitle">Modify your Password</p>
            <EditForm Model="passwordModel" OnValidSubmit="UpdatePassword">
                <InputText @bind-Value="passwordModel.CurrentPassword" type="password" />
                <InputText @bind-Value="passwordModel.NewPassword" type="password" />
                <button type="submit">Update Password</button>
            </EditForm>
        </div>
    </div> 
    
@code {
    [SupplyParameterFromForm] private UserRegisterModel? User { get; set; } = new();
    private PasswordModel passwordModel = new PasswordModel();

    //Method to update the email
    private async Task UpdateEmail()
    {
        var result = await AuthService.ChangeEmailAsync(User!.Email);
        NotificationService.Notify("Email updated successfully");
    }

    //Method to update the password
    private async Task UpdatePassword()
    {
        var result = await AuthService.ChangePasswordAsync(passwordModel.CurrentPassword, passwordModel.NewPassword);
        NotificationService.Notify("Password updated successfully");
    }
}


