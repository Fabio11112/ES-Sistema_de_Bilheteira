@page "/search/{query}"
@inherits AuthenticatedComponentBase
@using SistemaDeBilheteira.Services.API_Deserializer
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Models
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Response
@inject NavigationManager Navigation

<PageTitle>Resultados for "@query"</PageTitle>

<main class="main-content">
    <section class="movie-section">
        <h2 class="section-title">Resultados for "@query"</h2>
        <div class="movie-carousel no-scrollbar">
            @if (movies != null && movies.Any())
            {
                @foreach (var movie in movies)
                {
                    <a href="@($"MoviesDescription/{movie.Id}")" class="poster-wrapper">
                        <img src="@($"https://image.tmdb.org/t/p/w500{movie.PosterPath}")" alt="@movie.Title" class="movie-poster" />
                    </a>
                }
            }
            else
            {
                <p class="loading">Cargando películas...</p>
            }
        </div>
    </section>
</main>

@code {
    [Parameter]
    public string query { get; set; }

    private List<Movie>? movies { get; set; } = new List<Movie>();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            Console.WriteLine("Realizando la solicitud de búsqueda...");
            var deserializer = new Deserializer<Response<Movie>>();
            var apiUrl = Environment.GetEnvironmentVariable("MOVIES_SEARCH_LINK");

            if (string.IsNullOrEmpty(apiUrl))
            {
                Console.WriteLine("API URL no configurada o vacía");
                return;
            }

            var response = await deserializer.Fetch($"{apiUrl}?query={Uri.EscapeDataString(query)}");

            if (response == null)
            {
                Console.WriteLine("Respuesta de la API es nula.");
            }
            else
            {
                Console.WriteLine("Respuesta recibida de la API.");
                movies = response?.Results ?? new List<Movie>();
                Console.WriteLine($"Películas encontradas: {movies.Count}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error ocurrido: {ex.Message}");
            movies = new List<Movie>(); // Para evitar que falle si hay un error
        }
    }
}
