@page "/"
@inherits AuthenticatedComponentBase
@rendermode InteractiveServer

@using SistemaDeBilheteira.Services.API_Deserializer
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Models
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Response
@using Microsoft.AspNetCore.Components.Authorization
@using SistemaDeBilheteira.Services.AuthenticationService

@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<PageTitle>Home</PageTitle>


<main class="main-content">
    <!-- Principal Banner -->
    <section class="banner">
        @if (Movies != null && Movies.Any())
        {
            var movie = Movies.First();

            <div class="banner-wrapper">
                <a href="@($"MoviesDescription/{movie.Id}")" class="poster-wrapper">
                    <img src="@($"https://image.tmdb.org/t/p/w1280{movie.BackdropPath}")" alt="@movie.Title" class="banner-image" />
                </a>
              
                <div class="banner-title-overlay">
                    <h2 class="banner-title">@movie.Title</h2>
                </div>
            </div>
        }
        else
        {
            <p class="loading">Loading banner...</p>
        }
    </section>


    <!-- Movie Categories -->
    <section class="movie-section">
        <h2 class="section-title">Fantasy</h2>
        <div class="movie-carousel no-scrollbar">
            @if (Movies != null && Movies.Any())
            {
                @foreach (var movie in GetMoviesByGenre("Fantasy"))
                {
                    <a href="@($"MoviesDescription/{movie.Id}")" class="poster-wrapper">
                        <img src="@($"https://image.tmdb.org/t/p/w500{movie.PosterPath}")" alt="@movie.Title" class="movie-poster" />
                    </a>

                }
            }
            else
            {
                <p class="loading">Loading Fantasy movies...</p>
            }
        </div>
    </section>

    <section class="movie-section">
        <h2 class="section-title">Horror</h2>
        <div class="movie-carousel no-scrollbar">
            @if (Movies != null && Movies.Any())
            {
                @foreach (var movie in GetMoviesByGenre("Horror"))
                {
                    <a href="@($"MoviesDescription/{movie.Id}")" class="poster-wrapper">
                        <img src="@($"https://image.tmdb.org/t/p/w500{movie.PosterPath}")" alt="@movie.Title" class="movie-poster" />
                    </a>
                }
            }
            else
            {
                <p class="loading">Loading Horror movies...</p>
            }
        </div>
    </section>

    <section class="category-filter">
        <a class="Category-title" href="/Categories">Category</a>
        <div class="category-buttons">
            @if (Genres != null && Genres.Genres.Any())
            {
                @foreach (var genre in Genres.Genres.Take(8))
                {
                    var encodedGenre = Uri.EscapeDataString(genre.Name);
                    <a class="category-button" href="@($"/Genre/{encodedGenre}")">@genre.Name</a>
                }
            }
            else
            {
                <p class="loading">Loading genres...</p>
            }
        </div>
    </section>

      

    <section class="movie-section">
        <h2 class="section-title">Sci-fi</h2>
        <div class="movie-carousel no-scrollbar">
            @if (Movies != null && Movies.Any())
            {
                @foreach (var movie in GetMoviesByGenre("Science Fiction"))
              
                {
                    <a href="@($"MoviesDescription/{movie.Id}")" class="poster-wrapper">
                        <img src="@($"https://image.tmdb.org/t/p/w500{movie.PosterPath}")" alt="@movie.Title" class="movie-poster" />
                    </a>
                }
            }
            else
            {
                <p class="loading">Loading Sci-fi movies...</p>
            }
        </div>
        
        <button @onclick="Clicked">Button</button>
        <h1>@Texto</h1>
    </section>
</main>



@code {

    string Texto { get; set; } = string.Empty;

    List<Movie>? Movies { get; set; } = new List<Movie>();
    Response<Genre>? Genres { get; set; }

    private async Task Logout()
    {
        NavigationManager.NavigateTo("/LogIn", true);
        var result = await AuthService.LogoutAsync();
        if (result.Success)
        {
            NavigationManager.NavigateTo("/LogIn", true);
        }
    }

    public void Clicked()
    {
        Texto = "Clicked";
    }
    
    public const int TOTAL_PAGES = 9;

      protected override async Task OnInitializedAsync()
  {
      var movieDeserializer = new Deserializer<Response<Movie>>();
      var genreDeserializer = new Deserializer<Response<Genre>>();

      //string movieUrl = $"{Environment.GetEnvironmentVariable("MOVIES_LINK")}/popular";
      string genreUrl = $"{Environment.GetEnvironmentVariable("GENRES_LINK")}";

      //Movies = await movieDeserializer.Fetch(movieUrl)!;
      Genres = await genreDeserializer.Fetch(genreUrl)!;

      //var movieGenres = Genres.Results.Where(item => Movies.Results.GenreIds.Contains(item.Id)).ToList();
      
      

      for (int page = 1; page <= TOTAL_PAGES; page++)
      {
          string apiLinkWithPage = $"https://api.themoviedb.org/3/movie/popular?language=en-US&page={page}";

          var movies = await movieDeserializer.Fetch(apiLinkWithPage)!;
          if(movies != null)
            Movies?.AddRange(movies.Results);
      }
  }

      List<Movie> GetMoviesByGenre(string genre)
      {
          var result = Genres.Genres.FirstOrDefault(x => x.Name == genre);
          
          return Movies?.Where(m => result != null && m.GenreIds.Contains(result.Id)).ToList() ?? new List<Movie>();
      }

      

  }

  