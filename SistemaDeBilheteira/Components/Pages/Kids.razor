@page "/Kids"
@using SistemaDeBilheteira.Services.Movies;
@using RestSharp;
@using Newtonsoft.Json;
@using SistemaDeBilheteira.Services.API_Deserializer

<PageTitle>Kids</PageTitle>

<main class="main-content">
    <section class="movie-section">
        <h2 class="section-title">Kids</h2>
        <div class="movie-carousel no-scrollbar">
            @if (movies != null && movies.Any())
            {
                @foreach (var movie in GetMoviesByGenre(kids))
                {
                    <a href="@($"MoviesDescription/{movie.Id}")" class="poster-wrapper">
                        <img src="@($"https://image.tmdb.org/t/p/w500{movie.PosterPath}")" alt="@movie.Title" class="movie-poster" />
                    </a>
                }
            }
            else
            {
                <p class="loading">Loading Fantasy movies...</p>
            }
        </div>
    </section>
</main>

@code{
    List<Movie> movies = new();
    public const int kids = 16; // Kids genre ID from TMDB API

    protected override async Task OnInitializedAsync()
    {
        int totalPagesToLoad = 15; // Number of pages to load to add more movies
        for (int page = 1; page <= totalPagesToLoad; page++)
        {
            string apiLinkWithPage = $"https://api.themoviedb.org/3/movie/popular?language=en-US&page={page}";
            var options = new RestClientOptions(apiLinkWithPage);
            var client = new RestClient(options);
            var request = new RestRequest("");
            request.AddHeader("accept", "application/json");
            request.AddHeader("Authorization", "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTcwMTUzMjMwYTg1MTdjNDJmNjIwYzdiYzNiZWYwMCIsIm5iZiI6MTc0MzAwNzIyNi4wMDQ5OTk5LCJzdWIiOiI2N2U0MmRmOWVjOThiZjBhMGQ3NjFkYWYiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.PbOoXIOv1DhHXPun6PnxgwfgjEbx4Bg5ilWjh7ABw_s");
            var response = await client.GetAsync(request);

            if (response.IsSuccessful && response.Content != null)
            {
                var movieResponse = JsonConvert.DeserializeObject<MovieResponse>(response.Content);
                if (movieResponse?.Results != null)
                {
                    movies.AddRange(movieResponse.Results); // Add movies from the current page
                }
            }
        }
    }

    List<Movie> GetMoviesByGenre(int genreId)
    {
        return movies?.Where(m => m.GenreIds.Contains(genreId)).ToList() ?? new List<Movie>();
    }
}
