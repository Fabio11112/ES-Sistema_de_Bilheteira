@* @page "/QuantityOfTickets/{id:int}"
@inherits AuthenticatedPage
@using SistemaDeBilheteira.Services.API_Deserializer
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Models
@using SistemaDeBilheteira.Services.Database.Entities.ProductSystem
@using SistemaDeBilheteira.Services.IService
@using SistemaDeBilheteira.Services.IService.ServiceManager
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using SistemaDeBilheteira.Services.UI
@inject SharedTicket SharedTicket 
@inject IServiceManager ServiceManager
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

@if (Movie != null)
{
    <div class="movie-info">
        <div class="movie-details">
            <h2 class="movie-title">@Movie.Title</h2>
            <p class="date">@Function!.Date.ToString("dddd, MMMM d")</p>
            <p class="time">@Function!.Date.ToString("HH:mm")h</p>

            <div class="cinema-name">
                <img src="images/icons/location.svg" alt="location" class="button-icon" />
                <p class="cinema">Cinemas NOS Forum Madeira</p>
                <p class="location">Funchal, Madeira</p>
            </div>

            <div class="session-name">
                <p class="room">Room 5</p>
            </div>
        </div>

        <div class="people-going">
            <p class="people-going-text">How many people will go?</p>

            <div class="counter-container">
                <div class="counter-box">
                    <div class="number-display">@NumberOfPeople</div>
                </div>
                <div class="counter-buttons">
                    <button class="arrow-button" @onclick="IncreasePeople">‚ñ≤</button>
                    <button class="arrow-button" @onclick="DecreasePeople">‚ñº</button>
                </div>
            </div>

            <div class="continue-container">
                <button class="primary-button" @onclick="ProceedToNextStep">Continue</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading movie details...</p>
}

@code {
    [Parameter] public int id { get; set; }
    private Movie? Movie { get; set; }
    private int NumberOfPeople { get; set; } = 1;

    private Function? Function { get; set; }
    
    private IService<Function>? FunctionService { get; set; }
    private bool _initialized = false;

    /**
     * This method is called after the component has rendered.
     * It fetches the movie details and initializes the FunctionService.
     */
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!(firstRender && !_initialized))
            return;
        
        FunctionService = ServiceManager.GetService<Function>();
        var functionId = await SessionStorage.GetItemAsync<Guid>("functionId");
        Function = FunctionService.GetById(functionId);

        var movieDeserializer = new Deserializer<Movie>();
        var movieUrl = $"{Environment.GetEnvironmentVariable("MOVIES_LINK")}/{id}";
        Movie = await movieDeserializer.Fetch(movieUrl)!;

        _initialized = true;
        StateHasChanged();
    }
    
    /**
     * This method is called when the button is clicked.
     * It increases the number of people by 1, up to a maximum of 7.
     */
    private void IncreasePeople()
    {
        if(NumberOfPeople < 7)
            NumberOfPeople++;
    } 
    
    /**
     * This method is called when the button is clicked.
     * It decreases the number of people by 1, down to a minimum of 1.
     */
    private void DecreasePeople()
    {
        if (NumberOfPeople > 1)
            NumberOfPeople--;
    }
    
    /**
     * This method is called when the button is clicked.
     * It navigates to the next step in the ticket purchasing process.
     */
    private async Task ProceedToNextStep()
    {
        await SessionStorage.SetItemAsync("quantity", NumberOfPeople);
        NavigationManager.NavigateTo($"/SeatSelect/{id}");
    }
} *@

@page "/QuantityOfTickets/{id:int}"
@inherits AuthenticatedPage
@using SistemaDeBilheteira.Services.API_Deserializer
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Models
@using SistemaDeBilheteira.Services.Database.Entities.ProductSystem
@using SistemaDeBilheteira.Services.IService
@using SistemaDeBilheteira.Services.IService.ServiceManager
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using SistemaDeBilheteira.Services.UI
@inject SharedTicket SharedTicket 
@inject IServiceManager ServiceManager
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

@if (Movie != null)
{
    <div class="ticket-page">
        <!-- Secci√≥n de informaci√≥n de la pel√≠cula -->
        <div class="movie-header">
            <h1 class="movie-title">@Movie.Title</h1>
            
            <div class="movie-details">
                <div class="detail-item">
                    <span class="detail-icon">üìÖ</span>
                    <span>@Function!.Date.ToString("dddd, MMMM d")</span>
                </div>
                <div class="detail-item">
                    <span class="detail-icon">üïí</span>
                    <span>@Function!.Date.ToString("HH:mm")h</span>
                </div>
                <div class="detail-item">
                    <span class="detail-icon">üìç</span>
                    <span>Cinemas NOS Forum Madeira</span>
                </div>
                <div class="detail-item">
                    <span class="detail-icon">üèôÔ∏è</span>
                    <span>Funchal, Madeira</span>
                </div>
                <div class="detail-item">
                    <span class="detail-icon">üé¨</span>
                    <span>Room 5</span>
                </div>
            </div>
        </div>

        <!-- Secci√≥n de selecci√≥n de tickets -->
        <div class="ticket-selection">
            <h2 class="selection-title">How many people will go?</h2>
            
            <div class="ticket-counter">
                <button class="counter-btn" @onclick="DecreasePeople" disabled="@(NumberOfPeople <= 1)">
                    <span class="counter-icon">‚àí</span>
                </button>
                
                <div class="counter-value">
                    <span class="number">@NumberOfPeople</span>
                    <span class="label">@(NumberOfPeople == 1 ? "Ticket" : "Tickets")</span>
                </div>
                
                <button class="counter-btn" @onclick="IncreasePeople" disabled="@(NumberOfPeople >= 7)">
                    <span class="counter-icon">+</span>
                </button>
            </div>
            
            <div class="max-tickets">
                <span>Maximum of 7 tickets per transaction</span>
            </div>
        </div>

        <!-- Bot√≥n de continuar -->
        <div class="continue-section">
            <button class="continue-btn" @onclick="ProceedToNextStep">
                CONTINUE TO SEAT SELECTION
                <span class="arrow">‚Üí</span>
            </button>
        </div>
    </div>
}
else
{
    <div class="loading">
        <div class="spinner"></div>
        <p>Loading movie details...</p>
    </div>
}

@code {
    [Parameter] public int id { get; set; }
    private Movie? Movie { get; set; }
    private int NumberOfPeople { get; set; } = 1;

    private Function? Function { get; set; }
    
    private IService<Function>? FunctionService { get; set; }
    private bool _initialized = false;

    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!(firstRender && !_initialized))
            return;
        
        FunctionService = ServiceManager.GetService<Function>();
        var functionId = await SessionStorage.GetItemAsync<Guid>("functionId");
        Function = FunctionService.GetById(functionId);

        var movieDeserializer = new Deserializer<Movie>();
        var movieUrl = $"{Environment.GetEnvironmentVariable("MOVIES_LINK")}/{id}";
        Movie = await movieDeserializer.Fetch(movieUrl)!;

        _initialized = true;
        StateHasChanged();
    }
    
    private void IncreasePeople()
    {
        if(NumberOfPeople < 7)
            NumberOfPeople++;
    } 

    private void DecreasePeople()
    {
        if (NumberOfPeople > 1)
            NumberOfPeople--;
    }

    private async Task ProceedToNextStep()
    {
        await SessionStorage.SetItemAsync("quantity", NumberOfPeople);
        NavigationManager.NavigateTo($"/SeatSelect/{id}");
    }
}