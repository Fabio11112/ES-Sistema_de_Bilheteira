@page "/QuantityOfTickets/{id:int}"
@inherits AuthenticatedComponentBase
@using SistemaDeBilheteira.Services.API_Deserializer
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Models
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Response
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using SistemaDeBilheteira.Services.UI
@inject SharedTicket SharedTicket 

@if (Movie != null)
{
    <div class="movie-info">
        <div class="movie-details">
            <h2 class="movie-title">@Movie.Title</h2>
            <p class="date">@SessionDate.ToString("dddd, MMMM d")</p>
            <p class="time">@SessionDate.ToString("HH:mm")h</p>

            <div class="cinema-name">
                <img src="images/icons/location.svg" alt="location" class="button-icon" />
                <p class="cinema">Cinemas NOS Forum Madeira</p>
                <p class="location">Funchal, Madeira</p>
            </div>

            <div class="session-name">
                <p class="room">Room 5</p>
            </div>
        </div>

        <div class="people-going">
            <p class="people-going-text">How many people will go?</p>

            <div class="counter-container">
                <div class="counter-box">
                    <div class="number-display">@numberOfPeople</div>
                </div>
                <div class="counter-buttons">
                    <button class="arrow-button" @onclick="IncreasePeople">▲</button>
                    <button class="arrow-button" @onclick="DecreasePeople">▼</button>
                </div>
            </div>

            <div class="continue-container">
                <button class="primary-button" @onclick="ProceedToNextStep">Continue</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading movie details...</p>
}

@code {
    [Parameter] public int id { get; set; }
    private Movie? Movie { get; set; }
    private int numberOfPeople = 2;

    private DateTime SessionDate { get; set; } = new DateTime(2025, 4, 6, 21, 10, 0);

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var movieDeserializer = new Deserializer<Movie>();

        string? movieUrl = $"{Environment.GetEnvironmentVariable("MOVIES_LINK")}/{id}";

        Movie = await movieDeserializer.Fetch(movieUrl)!;
    }

    private void IncreasePeople() => numberOfPeople++;

    private void DecreasePeople()
    {
        if (numberOfPeople > 1)
            numberOfPeople--;
    }

    private void ProceedToNextStep()
    {
        SharedTicket.Quantity = numberOfPeople;
        NavigationManager.NavigateTo($"/SeatSelect/{id}?quantity={numberOfPeople}");
    }
}
