@page "/SignUp"
@rendermode InteractiveServer
@using SistemaDeBilheteira.Components.Cards.Authentication
@using SistemaDeBilheteira.Services.AuthenticationService
@using SistemaDeBilheteira.Services.AuthenticationService.Models
@inject IAuthService AuthService

<link rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Konkhmer+Sleokchher|Montserrrat">

<div class="background flex">
    <Banner></Banner>
    
    <div class="sign-up">
        <div class="greetings">Hello!</div>
        <div class="get-started">Sign Up to Get Started</div>


        <form>
            <div class="flex input-element">
                <div class="logo"> <img class="user-logo" src="images/icons/profile/user.svg" alt=""/></div>
                <input @bind="User.Name" id="full name" placeholder="FULL NAME"/>
            </div>
            <div class="flex input-element">
                <div class="logo"> <img src="images/icons/authentication/email.svg" alt=""/></div>
                <input @bind="User.Email" id="email" type="email" placeholder="EMAIL ADDRESS"/>
            </div>
            <div class="flex input-element">
                <div class="logo"> <img src="images/icons/authentication/lock.svg" alt=""/></div>
                <input @bind="User.Password" id="password" type="password" placeholder="PASSWORD"/>
            </div>
            <div class="flex input-element">
                <div class="logo"> <img src="images/icons/authentication/lock.svg" alt=""/></div>
                <input @bind="User.ConfirmPassword" id="confirm-password" type="password" placeholder="CONFIRM PASSWORD"/>
            </div>
            
            <button type="button" @onclick="Register" class="register">REGISTER</button>
            
            <div>@Message</div>

        </form>
    </div>
    

</div>

@code {

    private UserRegisterModel User { get;} = new UserRegisterModel();
    private String Message { get; set; } = string.Empty;
    
    private async Task Register()
    {
        IAuthResult result = await AuthService.RegisterAsync(User);

        if (!result.Success)
        {
            //do something
        }

        Message = result.Message;

    }

}