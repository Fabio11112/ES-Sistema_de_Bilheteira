@using SistemaDeBilheteira.Services.API_Deserializer
@using SistemaDeBilheteira.Services.API_Deserializer.Deserializable.Models
@using SistemaDeBilheteira.Services.Database.Entities
@using SistemaDeBilheteira.Services.Database.Entities.ProductSystem.PhysicalMedia
@using SistemaDeBilheteira.Services.Database.Entities.ShoppingCart
@rendermode InteractiveServer

<div class="element">
    <img class="movie-image" src="@PosterPath" alt="@Movie?.Title"/>
    <div>
        <div class="content">
            <div class="movie-information">
                <div class="movie-name">@Movie?.Title</div>
                <div class="text information">
                    Type @Item.Product.GetProductType()
                </div>
                <div class="text information">@Stock</div>
            </div>
            <div class="price-details">
                <div class="detail">
                    <div class="text information">Each</div>
                    <div class="number information">@Currency@Item.Product.Price</div>
                </div>
                <div class="detail">
                    <div class="text information">Quantity</div>
                    <div class="number information quantity">@Item.Quantity</div>
                </div>
                <div class="detail">
                    <div class="text information">Total</div>
                    <div class="number information">@Currency@Total</div>
                </div>
            </div>
        </div>
        
        <div class="buttons">
            <div @onclick="HandleDelete" class="button">Remove</div>
        </div>
    </div>
</div>

@code {
    [Parameter] public required ShoppingCartItem Item { get; set; }
    [Parameter] public required EventCallback<ShoppingCartItem> Delete { get; set; }
    private string PosterPath { get; set; } = "https://image.tmdb.org/t/p/original";

    private string Type { get; set; } = string.Empty;
    private string Currency { get; set; } = "€";
    private string Stock { get; set; } = "In Stock";
    private Movie? Movie { get; set; }
    private int Quantity { get; set; } = 2;
    private double Total { get; set; }

    /**
     * This method is called when the component is initialized.
     * It fetches the movie data from the API and sets the PosterPath and Type properties.
     */
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var deserializer = new Deserializer<Movie>();
        var url = $"{Environment.GetEnvironmentVariable("MOVIES_LINK")}/{Item.Product.MovieId}";
        Movie = await deserializer.Fetch(url)!;
        PosterPath += Movie?.PosterPath;
        Type = Item.Product.GetType().Name;
        Total = Item.Product.Price * Item.Quantity;
    }

    /**
     * This method is called when the delete button is clicked.
     * It invokes the Delete event callback with the current item.
     */
    private async Task HandleDelete()
    {
        await Delete.InvokeAsync(Item);
    }
}