@namespace SistemaDeBilheteira.Components.Cards
@using SistemaDeBilheteira.Services.UI
@inject NotificationService NotificationService
@rendermode InteractiveServer

@if (!string.IsNullOrEmpty(Message))
{
    <div class="notification">
        @Message
    </div>
}

@code {
    private string? Message { get; set; }

    /** 
     * This method is called when the component is initialized.
     */
    protected override void OnInitialized()
    {
        NotificationService.OnNotify += ShowMessage;
    }

    /**
     * This method is called when the component is disposed.
     */
    private void ShowMessage(string message)
    {
        _ = InvokeAsync(async () =>
        {
            Message = message;
            StateHasChanged();

            // show the message for 3 seconds
            await Task.Delay(1000);

            Message = null;
            StateHasChanged();
        });
    }

    /**
     * This method is called when the component is disposed.
     */
    public void Dispose()
    {
        NotificationService.OnNotify -= ShowMessage;
    }
}
