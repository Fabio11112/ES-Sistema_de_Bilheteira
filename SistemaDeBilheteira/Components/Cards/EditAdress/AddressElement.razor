@using SistemaDeBilheteira.Services.AuthenticationService.IService
@using SistemaDeBilheteira.Services.Database.Entities
@using SistemaDeBilheteira.Services.IService
@using SistemaDeBilheteira.Services.IService.ServiceManager
@rendermode InteractiveServer
@inject IServiceManager ServiceManager


<div class="address">
    <div class="form-control">
        
        <div class="info">@Address.StreetLine1</div>
        <div class="info">@Address.StreetLine2</div>
        <div class="info">@Address.City</div>
        <div class="info">@Address.State</div>
        <div class="info">@Address.Country</div>
        <div class="info">@Address.ZipCode</div>
        
        <button class="delete-button" @onclick="HandleDelete"> Delete</button>
    </div>
</div>
<script src="scripts/UserInfoItem.js"></script>


@code {
    [Parameter] public required Address Address { get; set; }
    [Parameter] public EventCallback<Address> Delete { get; set; }
    private IService<Address>? AddressService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    
    private async Task HandleDelete()
    {
        await Delete.InvokeAsync(Address);
    }
    
}